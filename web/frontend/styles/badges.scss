//! SCSS code for the badges that is not covered by the default
//! styles in the forms/standard.scss file.


// Breakpoints
$breakpoints: (
    "small": 480px,
    "medium": 768px,
    "large": 1024px,
    "extra-large": 1280px
);

// Mixin for media queries
@mixin respond-to($breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
    }
}

.badges-container {
    display: grid;
    grid-gap: 10px;
    margin-top: 1em;
    margin-bottom: 1em;

    &:empty {
        display: none;
    }

    align-items: stretch;
    grid-template-columns: repeat(1, 1fr); // Default for small devices

    @include respond-to("medium") {
        grid-template-columns: repeat(2, 1fr); // 3 columns for medium devices
    }

    @include respond-to("large") {
        grid-template-columns: repeat(3, 1fr); // 4 columns for large devices
    }
    
    @include respond-to("extra-large") {
        grid-template-columns: repeat(4, 1fr); // 6 columns for extra-large devices
    }
}

form {
    .badges-container {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
        @include respond-to("medium") {
            grid-template-columns: repeat(2, 1fr); // 3 columns for medium devices
        }
    
        @include respond-to("large") {
            grid-template-columns: repeat(2, 1fr); // 4 columns for large devices
        }
    
        @include respond-to("extra-large") {
            grid-template-columns: repeat(2, 1fr); // 6 columns for extra-large devices
        }
    }
}

.badge {
    // flex-direction: column;
    justify-content: space-between; 
    border-radius: 0.25rem;
    border: 1px solid;
    border-color: $light_grey;
    box-sizing: border-box;
    padding: 0.25rem;
    min-width: 0;
    transition: border-color 0.2s;
    animation: pop-in 0.3s;

    &:hover {
        border-color: $primary;
    }

    &.clickable {
        cursor: pointer;
    }

    &.small {
        border: 1px solid;
        width: auto;
        box-sizing: border-box;
        padding: 0.25rem;
        border-color: $light_grey;
        display : flex;
        align-items : center;
    }

    ul.badges-list {
        list-style: none;
        padding: 0;
        padding-top: 0.5em;
        margin-top: auto;
        display: flex;
        flex-wrap: wrap;
        display: grid;
        grid-gap: 3px;
        align-items: stretch;
        grid-template-columns: repeat(2, 1fr); // Default for small devices
        li.badge.small {
            p.badge-title {
                font-size: 0.8rem;
            }
            &.has-image {
                min-height: 1.5em;
                padding-left: 1.6em;
            }
        }
    }

    &.has-image {
        position: relative;
        padding-left: 5.25em;
        min-height: 5em;
        img.badge-image {
            position: absolute;
            width: auto;
            height: 100%;
            max-width: 5em;
            object-fit: cover;
            max-height: fit-content;
            border-top-left-radius: inherit;
            border-bottom-left-radius: inherit;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            display: inline-block;
            top: 0;
            left: 0;
        }
        &.small {
            min-height: 2em;
            padding-left: 2.25em;
            img.badge-image {
                max-width: 2em;
            }
        }
    }

    &.closable {
        cursor: pointer;
        position: relative;
        &:hover {
            border-color: $red !important;
            &:after {
                color: $red;
            }
            ul.badges-list {
                li.badge.small {
                    border-color: $red !important;
                }
            }
        }
        &:after {
            content: "Ã—";
            position: absolute;
            top: 0;
            right: 0;
            cursor: pointer;
            color: $light_grey;
            transition: color 0.2s;
            padding-right: 0.25em;
        }
    }

    a {
        color: inherit;
        text-decoration: none;
    }

    p.badge-title {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        span {
            font-weight: 400;
        }
        strong {
            font-weight: 800;
        }
        i {
            display: inline-block;
            width: 1.2em;
            text-align: center;
        }
    }

    p {
        margin: 0;
        padding: 0;
        font-size: 1rem;
    }

    p.badge-description {
        font-size: 0.9rem;
        margin-top: 0.5rem;
        text-align: justify;
        text-justify: inter-word;
        strong {
            font-weight: 800;
        }
    }

    &.blue {
        &:hover {
            border-color: $blue;
        }
    }

    &.orange {
        &:hover {
            border-color: $orange;
        }
    }

    &.red {
        &:hover {
            border-color: $red;
        }
    }

    &.teal {
        &:hover {
            border-color: $teal;
        }
    }

    &.green {
        &:hover {
            border-color: $green;
        }
    }

    &.yellow {
        &:hover {
            border-color: $yellow;
        }
    }

    &.purple {
        &:hover {
            border-color: $purple;
        }
    }

    &.pink {
        &:hover {
            border-color: $pink;
        }
    }

    &.brown {
        &:hover {
            border-color: $brown;
        }
    }

    &.grey {
        &:hover {
            border-color: $grey;
        }
    }

    &.black {
        &:hover {
            border-color: $black;
        }
    }

    &.near-black {
        &:hover {
            border-color: $near_black;
        }
    }

    &.grey {
        &:hover {
            border-color: $grey;
        }
    }

    &.primary {
        &:hover {
            border-color: $primary;
        }
    }
}