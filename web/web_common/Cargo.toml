[package]
name = "web_common"
version = "0.1.0"
edition = "2021"
repository = "https://github.com/earth-metabolome-initiative/emi-monorepo"
license = "GPL-3.0"
keywords = ["science", "database", "web", "api"]
readme = "README.md"
categories = ["science", "database", "web", "api"]
authors = ["Earth Metabolome Initiative"]
description = "Utilities for the Earth Metabolome Initiative"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde.workspace = true
serde_json.workspace = true
uuid.workspace = true
bincode.workspace = true
bytes.workspace = true
enum_dispatch.workspace = true

validator = { version = "0.16", features = ["derive"] }
log = "0.4"
common-traits.workspace = true
web_common_traits.workspace = true

# We need to be able to implement the From trait for types defined in third
# party crates that are used in the backend and frontend. In order to do so,
# we define two features that are used to enable the implementation of the
# From trait for types defined in third party crates respectively in the
# backend and frontend. The features are called `backend` and `frontend`.

actix-ws.workspace = true
actix-web = { version = "4.0", optional = true }
diesel = { version = "2.2.1", features = ["postgres", "r2d2", "chrono", "uuid", "extras"], optional = true }

gloo-net = {version="0.5.0", features=["websocket"], optional = true}
actix = {version="0.13", optional = true}

rustrict = "0.7.24"
image = "0.24.0"
js-sys = "0.3.69"
wasm-bindgen-futures = {version="0.4.42", optional = true}
futures-util = "0.3.30"
wasm-bindgen = {version="0.2.92", optional = true}
const_format = "0.2.32"
chrono.workspace = true
yew = {version="0.21.0" , optional = true}
r2d2 = {version="0.8.10", optional = true}
reqwest = "0.12.4"
base64 = "0.22.1"
rustfft = "6.2.0"
strsim = "0.11.1"

[dependencies.web-sys]
version = "0.3.69"
optional = true
features = [
    'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
  'Document',
  'HtmlDocument',
  'HtmlInputElement',
  'HtmlFormElement',
  'Navigator',
  'FormData',
  'File',
  'HtmlDivElement',
  'DataTransfer',
  'Blob',
  'Url',
  'FileReader',
  'EventTarget',
  'Geolocation',
  'Usb',
  'Coordinates',
  'Position',
  'PositionOptions',
  'PositionError',
  'HtmlAnchorElement',
]

[features]
# The `backend` feature is used to enable the implementation of the From trait
# for types defined in third party crates in the backend.
backend = [ "actix-web", "actix", "diesel", "r2d2", "web_common_traits/backend" ]

# The `frontend` feature is used to enable the implementation of the From trait
# for types defined in third party crates in the frontend.
frontend = ["gloo-net", "web-sys", "wasm-bindgen-futures", "wasm-bindgen", "yew"]
