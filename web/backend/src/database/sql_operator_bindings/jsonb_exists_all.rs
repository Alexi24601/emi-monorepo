//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(JsonbExistsAll, " ?& ", diesel::sql_types::Bool, backend: diesel::pg::Pg);
/// Trait for the `?&` operator.
pub trait HasJsonbExistsAll:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Jsonb>
{
    /// The function to create the `JsonbExistsAll` struct representing the `?&` operator.
    fn jsonb_exists_all<Rhs>(self, rhs: Rhs) -> JsonbExistsAll<Self, Rhs::Expression>
    where
        Rhs:
            diesel::expression::AsExpression<diesel::pg::sql_types::Array<diesel::sql_types::Text>>,
    {
        JsonbExistsAll::new(self, rhs.as_expression())
    }
}

impl<T> HasJsonbExistsAll for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Jsonb>
{
}
