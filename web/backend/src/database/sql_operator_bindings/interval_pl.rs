//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(IntervalPl, " + ", diesel::sql_types::Interval, backend: diesel::pg::Pg);
/// Trait for the `+` operator.
pub trait HasIntervalPl:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Interval>
{
    /// The function to create the `IntervalPl` struct representing the `+` operator.
    fn interval_pl<Rhs>(self, rhs: Rhs) -> IntervalPl<Self, Rhs::Expression>
    where
        Rhs: diesel::expression::AsExpression<diesel::sql_types::Interval>,
    {
        IntervalPl::new(self, rhs.as_expression())
    }
}

impl<T> HasIntervalPl for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Interval>
{
}
