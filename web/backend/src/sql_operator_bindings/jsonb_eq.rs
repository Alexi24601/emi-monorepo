//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(JsonbEq, " = ", diesel::sql_types::Bool, backend: diesel::pg::Pg);
/// Trait for the `=` operator.
pub trait HasJsonbEq:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Jsonb>
{
    /// The function to create the `JsonbEq` struct representing the `=` operator.
    fn jsonb_eq<Rhs>(self, rhs: Rhs) -> JsonbEq<Self, Rhs::Expression>
    where
        Rhs: diesel::expression::AsExpression<diesel::sql_types::Jsonb>,
    {
        JsonbEq::new(self, rhs.as_expression())
    }
}

impl<T> HasJsonbEq for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Jsonb>
{
}
