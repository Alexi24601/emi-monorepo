//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(Textregexne, " !~ ", diesel::sql_types::Bool, backend: diesel::pg::Pg);
/// Trait for the `!~` operator.
pub trait HasTextregexne:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Text>
{
    /// The function to create the `Textregexne` struct representing the `!~` operator.
    fn textregexne<Rhs>(self, rhs: Rhs) -> Textregexne<Self, Rhs::Expression>
    where
        Rhs: diesel::expression::AsExpression<diesel::sql_types::Text>,
    {
        Textregexne::new(self, rhs.as_expression())
    }
}

impl<T> HasTextregexne for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Text>
{
}
