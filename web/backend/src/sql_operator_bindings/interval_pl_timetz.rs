//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(IntervalPlTimetz, " + ", diesel::sql_types::Time, backend: diesel::pg::Pg);
/// Trait for the `+` operator.
pub trait HasIntervalPlTimetz:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Interval>
{
    /// The function to create the `IntervalPlTimetz` struct representing the `+` operator.
    fn interval_pl_timetz<Rhs>(self, rhs: Rhs) -> IntervalPlTimetz<Self, Rhs::Expression>
    where
        Rhs: diesel::expression::AsExpression<diesel::sql_types::Time>,
    {
        IntervalPlTimetz::new(self, rhs.as_expression())
    }
}

impl<T> HasIntervalPlTimetz for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Interval>
{
}
