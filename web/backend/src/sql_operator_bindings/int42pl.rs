//! This file is automatically generated by the code generation suite.
//! Do not edit it manually.
//!
//! This file contains the bindings for the SQL operators in the database.

diesel::infix_operator!(Int42pl, " + ", diesel::sql_types::Integer, backend: diesel::pg::Pg);
/// Trait for the `+` operator.
pub trait HasInt42pl:
    Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Integer>
{
    /// The function to create the `Int42pl` struct representing the `+` operator.
    fn int42pl<Rhs>(self, rhs: Rhs) -> Int42pl<Self, Rhs::Expression>
    where
        Rhs: diesel::expression::AsExpression<diesel::sql_types::SmallInt>,
    {
        Int42pl::new(self, rhs.as_expression())
    }
}

impl<T> HasInt42pl for T where
    T: Sized + diesel::expression::Expression<SqlType = diesel::sql_types::Integer>
{
}
