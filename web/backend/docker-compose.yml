version: '3'
services:
  postgres_database:
    container_name: postgres
    image: postgres:14.7-alpine
    restart: always
    volumes:
      - ${POSTGRES_DATABASE_DIRECTORY}:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - "5432" # Publishes 5432 to other containers but NOT to host machine
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - postgres
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - ${REDIS_DATABASE_DIRECTORY}:/data
  postgres_database_backup:
    profiles:
      - backup
    build:
       # Path to the directory containing your Dockerfile and scripts
      context: ./postgres-backup-configuration
      args:
        - BACKUP_SERVER_USERNAME=${BACKUP_SERVER_USERNAME}
        - BACKUP_SERVER_NAME=${BACKUP_SERVER_NAME}
        - BACKUP_SERVER_PORT=${BACKUP_SERVER_PORT}
        - BACKUP_REMOTE_PATH=${BACKUP_REMOTE_PATH}
    depends_on:
      - postgres_database
    volumes:
      - ${POSTGRES_DATABASE_DIRECTORY}:/backup_source
    secrets:
      - source: postgres_database_backup_ssh_private_key
        target: postgres_database_backup_ssh_private_key
        mode: 0600

secrets:
  postgres_database_backup_ssh_private_key:
    file: ${BACKUP_SERVER_PRIVATE_KEY_PATH}

networks:
  postgres:
    driver: bridge